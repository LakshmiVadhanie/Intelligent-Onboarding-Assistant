{
  "title": "Discussion on JTBD Mapping - Erika/Veethika",
  "video_id": "-ff-yAFjFOE",
  "url": "https://www.youtube.com/watch?v=-ff-yAFjFOE",
  "transcript": " All right, so today, Erica and I are going to the process of mapping jobs. And I am taking the reference of the old mapping that I had done about one and a half years ago, which might not be perfect, but this is what we are going to base our discussion on. How I started with this mapping is I'm not sharing my screen and I totally should. All right, is it. Visible enough? Okay, great. So I started off with the kind of making a note of the core functional jobs that users come to perform when we are talking about all things verify. So at this stage, I was not even like focusing a lot on just pipe and execution or just continuous integration. I was thinking of everything that users would want to do with the features that we kind of group under verify. And from there, I consolidated the core jobs into this one particular statement and this statement says to standardize an automate tests builds and deploy process across organization to allow easy contribution while keeping them. The main branch screen, which is main branch, healthy. And I like kept this as a reference for the core job that we are going to be referring to. The next part was thinking of who would be executing the jobs. The circles in the innermost circle are the core executors. So for core executors, I thought of personas that we very frequently refer to like the DevOps engineers, the software engineer, the developer. And a little outside that circle on its periphery, I was imagining personnel such as system administrator compliance manager, release manager development team lead because in the process that release managers follow and compliance managers follow the processes, they are very much kind of around pipelines because pipelines enables the release process and. Following the compliance guidelines and then who else can use pipelines and related features. The idea is anybody can because taking a reference of a company like get love where we work. Everybody runs pipelines, everybody merges their changes, so everybody kind of interacts with that in their day to day job. I kind of skipped this part because I was not able to get a very good hang of like what's the value that this adding and I'm not saying that that was really great step on my part, but just stating that it wasn't. Coming to the job map part, so we have these stages which come predefined and I tried to segregate all the primary not primary, although jobs that were kind of that were documented here earlier into these buckets into these different stages, let's say. And I started off like if we talk about defining and we talk about pipelines, then what are the jobs, which are relevant at that stage and of course what's relevant is defining a new pipeline but to put it in a more functional way without. So focusing a lot on the tool and the exact mechanisms that we are providing today, so I wrote that defining standard standards tests and commands for organizations to test for the deploy. And as written keeping in mind that users have to author the pipeline before they can even like before they can do anything else for that then comes the part of locating so make a aware of available test suite or explain the process for using existing pipeline. And so on, so what I saw was since we had made this division in the responsibilities of the two stage groups, by the not string and by an execution and we mentioned that everything that relates to defining the pipeline or editing the pipeline it's under the purview of type and altering and by the pipe and is running that's when. It is like it comes under the categories under higher than execution so. It starts with like where would be make the like this option available to users to. Avail the automated tests and processes that's where we are talking about the discovery of all features which are related to our current execution or continuous integration next was just confirming like enable using environment specific process so this particular stage we are only talking about like maybe. Confirming the action and next was when pipe and has already started to execute so when the. I'm using the term pipeline here which is not ideal and I just want to make a note that we are still talking about those automated tests but since it's just like i'm going through the process i'm just using terms which are not very well caught off. And so when we come to the execute stage this is exactly what pipeline execution category stick care of like when the pipeline is running when the runner is picking up jobs executing those. What is the job what what is the real job that we are referring to here what is. What is it what is it that users have come to do on get lab that we are making happen through these through the set of feature and the next was. Yeah. That note and so this is perfect but where do the devs come in like and so so is this execute the between the handoff between stage four and stage five is that how we distinguish authoring from. From execution. Not really so I think that defining. Is apart that's mostly played by DevOps engineers or the time leads and it kind of i mean it's not something very. But it's not a hard and fast because it totally depends on the composition of the teams like if it's a very short team then maybe there's one developer who's responsible for the pipeline as well apart from the day to day job of writing a software but in like big enterprise teams there would be a dedicated DevOps engineer or they might even be an s re who's going to take. Or read responsibility of all things that relates to defining or writing the pipeline or editing the pipeline so whether handoff really happens is. I would say. Not even look it prepare. Because when developers are merging their changes. They are looking for initiating these. automated tests and once they initiate that and confirm, this is actually the part where their role kicks in. Okay. And then, to some degree, the people upstream are defining the tests or do we think as define the tests? Are they just running them? They're just running them because they cannot define anymore. The definition of the pipeline has already been written and they only can avail what's already there. Okay, got it. Thank you, Tony. Yeah. And the next part is of course, monitor because when the jobs are being executed, at that time, there would be some degree of anxiety among the developers. Like, I initiated this. I have other things to look at. How is this progressing? Would I have to come back and dedicate more time to this? So they want some sort of piece of mind. And that's where the monitoring part comes in. They want to easily be able to examine and monitor the running pipeline and observe if like the safety measures are in place. For example, they want to be assured that the variables that they're passing through the jobs, they're not getting leaked anywhere. There's no security threat that's underway. And in case something goes here and there, like, not as expected, then there is a chance of modifying. Like, there's a scope to modify the definition, but again, one has to have the proper, the right access to make those modifications. And here the same person who can define can also modify. So maybe this, this is a reverse handoff. Like where the developers are communicating with the demo sentinus. Okay, cool. Good. And then stage seven, and then tell me a little bit about stage four, or stage five. Are they in? What do we think they're doing in stage five? Yeah, so stage four, if I talk to you in terms of like the exact action that you are performing on the product. So when you, when you click on like creating the merge request, when the creation of MR is initiated, at the same time, the pipeline also gets started. So that's one. And then another option to do this is when you go to your pipeline page, pipeline index page, and you click on the blue button, which is on the top right corner, that's his run pipeline. That's when you're confirming that action, which is initiating a pipeline. So that's where the execution begins. Okay. And then devs do that for sure. Yes, yes, devs do that. Okay. Okay, cool. And then five. Okay, my God. Yeah, five is monitoring. So this can be targeting like both the personas. I know that jobs have to be person-agnostic, but talking in terms of like who's doing the who the, who the main executor here is. Developers are expecting different things when they are talking about monitoring the pipelines and the devops engineers or someone sitting like at the very top at the director level, they're expecting something very different from monitoring. They want to see like in terms of usage, how things are probably. Go back to execute, because even execute looks like in this version of the world that execute is running the tests. Yes. So all of that seems like really security-based. And I think that's right in this job, agnostic way, but I think that one way we could frame that so that it would kind of cover like kind of what you're saying about that coming from other people. And I am in this study where we're looking at the product, the life cycle for infrastructure resources and talking about those different components and who and also for secrets and who's in charge of those systems. It's not, it's sometimes the dev ops people, but it's coming from the CTO or like a security officer or like there so they're doing that in coordination. So one thing we could do is frame that stage in terms of like what I work with my needs to align with our security standards. Yes. Yeah, that's a really great point. That's something that I definitely missed like noting here that even though like the executor, especially in the context of the execute state, it's it might be the developer, but the job that the job the user who the job should target might be some entirely different the compliance manager or the release manager or who's our concern. Yes, it's teamwork. Yeah. Yeah. So one thing that I saw in the video today, in one of the videos that I was watching is so there the person talked about that let's say you're working for a B2B company and you have a buyer, but the buyer is not your user. The buyer is like of course purchasing from you, but you should never like build the persona, build the jobs to be done targeting the buyer because it has to be about the user or the user is trying to accomplish. So even though we're not talking about the buyer here, but in terms of who the jobs to be done should target like the end user of that, I think in this case it's different set of people. Yeah, or at least they're in control and the developers are working within those. Yes, how it bar rails. Yeah. Okay. And then stage six, six, six, yes. So like I had mentioned that from stage six, different kind of personas would have different expectations. Here, it's feared because now when I think of it that even though this involves like defining the core executors at the very beginning, I think the core executors for every stage is different. Yeah, because I'm thinking that yeah, the stage six, the devs are hands on again, right? Yes. Okay. Yeah, but should it matter like who's the most hands on? Should it matter like who's concern is this particular stage attendant to? Well, I think that's why the jobs to be done, at least this is the page, this is the like handbook page with Jackie's video that like I can understand it. So because the job can be anybody that does it, but eventually the person when it becomes a jobs to be done, the persona steps in. Because it says in this handbook, a page says job, deploy and build into place offer and then job performer is an element of jobs to be done and that brings in the persona. Which is part of the circumstance. Yes, but I could get us in a lot of trouble because I'm not sure that I'm tracking how we do it here, but that's how I think it that's that's what I mean, like we want to just be able to pull out not the jobs to be done, but even just the job. But I think the job is more about like kind of how we said, making the releases more efficient in a way that is secure. Yeah. For that meets the security requirements. We did within my company. Yeah, I think thinking in the constraint, only thinking in the constraint of the executive person, as that we shortly start at the beginning, I think that's a wrong approach. That kind of limits in some way, like how we are defining the job should be done and it might not be because a developer would never be too concerned about the compliance standards or the security standards. It would always be somebody else, but if I only think of like what the developer is trying to achieve here, I might get things wrong. What do you think? Yeah, I mean, I think we want to just talk to them about these about what they're trying to do, because some of them I've talked to are in charge of security stuff, but they're not like the author, kind of how we're doing it. We can also have a discussion around this. Yeah. No, and I think that I mean, even now, one question I have is just like, where does Nadi has work stop up and then your work pick up? I mean, I'm not even sure there. So this modified part where I talked about a reverse handover, this is Nadi's, and then this is Nadi's define and to some extent locate. Okay, I think that's what I think I'm always wanting to make it like a literal break off, but that's good. Okay. Yeah. Yeah. And then I did this small exercise of prioritization. At this point, I couldn't tell like what the colors denote, because I was smart enough not to make an index for that. But yeah, we had a synchronous session, B and the PM, and we talked about like which are the most important and most important personas, but we satisfy it, so we mark them as opportunities for ourselves. Like this is the area where we should be thinking of making improvements in our future of plans for categories. And then yeah, I mean, it feels like we're implicitly mapping the personas to the stages. But what if we just make the job, making the release, making the releases, is it of my software, more efficient in a way that meets the security requirements of the software, which didn't say mine, that making the releases of software more efficient in a way that meets the security requirements of our company, our company, in the way that meets company security requirements. Because that will cover this whole flow. That's also what confuses me is whether or not the job needs to cover a whole flow or yeah, that's where the elevation and the granularity that mapping comes into picture. So we can like if you map it as a reverse triangle, then what you're saying, that can totally be the core jobs to be done, which is at the highest level. And then when we try to like break it further, it would be, it would cover the flow. Okay. I love that reverse triangle. Yep. Okay, and then okay, let's talk about a little bit about where the merge trains come in. So let me tell you. And then I think the merge trains come in at five stage five. Yes, they do. That's right. Okay. And then the, what was that other thing? Yeah. So I think, so because we were talking about combining those two studies. Mm-hmm. So I think that's how we can kind of think about it is like mapping out. Can we think about it like mapping out the jobs to be done across this one job workflow? Merge trains execute. I'm going to enter the note for the one job workflow. The one that you mentioned about the one that you had framed. Yeah. That can be, so in my case, I had something for the core job. And like for the new mapping, what you mentioned could be our core job. I think so. Yeah, the top of the triangle one. And then I think is what our main research goal can be. Or where I mean research question can be would be to figure out. Where did I write it? I wrote it. Yeah, how do we help developers to. How do we? Yeah, here it is. How do we help developers? Oh no, how do we help users? Because we don't want to say users to make their releases more efficient. So that could be of this combined research study. We can say that's our primary goal. Like that could be the name of the research study. And then kind of our approach could be. We could even have we could even have these stages here and then say like walk us through your process with these stages. Like ideally they would show us in the tool, but they are sometimes not what they don't want to do that. So we could just put this in a deck and then have them talk through like first to say where are you involved in this flow, right? Yeah. And then say, okay, now unpack what are your goals here? What are you trying to do and what are your key tasks? So that's. I think that sounds good. Yeah. It would be critical though. Yeah, because my current plan was kind of to create the initial mapping by myself and then go to validation, but this is so much better because we won't have to like take a U-turn at any part of the process. Yeah, I think so. And then we just get them to kind of tell us. And it's like ideally we wouldn't do that, but this is such a technical space that I think it's defensible. Hold it. We're not asking me. Yeah, I think it's right. So, okay. So the method would be to interview to work through. The different stages involved in pipelines. To see where our users. Working and what their goals are. Do you think they'll recognize these parks or it doesn't matter. We can even just say, um, we can even just say this is how we're defining this isn't in define, locate, prepare, confirm. Is that coming from us in any way or that's not coming from us that's actually coming from the uh, job, stability and templates. If you think like changing this to and even combining a few stages would help, which I think would help. For example, I don't see like very clear differentiation between prepare and confirm here. It's kind of. Maybe that's an idea too is maybe what we do first is just say from your perspective, let's map out. What are the different stages. Like card sorting sort of without providing cards. Well, yeah. Like what I end up doing, I'll show you one of these sessions, but what I end up doing is like just like making shapes with them and like having them talk about it. Like, so what we're doing right now with the, um, the secrets lifecycle is just to be like, tell me about a secret. Where's the beginning. What's the middle. What's the end. And then they kind of articulated there. But in that one, we're like, who what where when. But I think in this one, we would just be like, so where does your process start. But I'm not the only thing I'm not sure about there is like how we frame it. Yeah. So keeping it open ended, but uh, kind of nudging them to define those stages themselves. Yeah. And what's what do we say this? What is at the stages of. What is that? What do we, how do we say it? Uh, how do you. Your perspective, what are the stages of a pipeline. Of pipeline execution of pipeline. Um, the stages of. How you were. Oh, should we like keep it a little more generic and talk about what are the stages of verifying your code. Got it. Yeah. And you know what we can say to like we can say like not from your perspective or like what I mean, that's fine too, but we could just say tell us how your teams are breaking up the process of verifying your code into stages. I'm liking where this is going. Yeah. Yeah. This is the kind of information that uh, they never asked for. Mm-hmm. I think we want to step back. Tell us how your team, especially if you have the bandwidth. Tell us how your teams are breaking up the process of verifying your code. Mm-hmm. And the good part is the same set of information can also be useful for Gina and Nadia. Yeah. Um, uh, yeah, because they're in this flow too, right? Yeah. Yeah. Okay. At some point we'll need to put, where is, can we do it now really quickly? To help my brain? What stage is Gina doing? Uh, pipe and insights and runner. But in this, I like these stages. Okay. All right. I thought stage groups. That's what was going on in the mind. So here we should call them, maybe we should call them steps so we don't confuse ourselves. Uh, I think execute. Execute is where both the stage groups are genius working with would very well fit. And sorry, the pipeline insights can be more about monitor, I guess. Stage six. Yes. And runner is of course execute because when the, uh, jobs are being executed, that's when the role of runner kicks in. Okay. Okay. So it's a look up here. So stage one, so stage five is Gina when she's doing runners. Yes. Right. How does one day we'll talk about how runners and merge trains interact? It's all in that. It's hopefully in that blog post. Uh, okay. Cool. Uh, yeah. Okay. Well, it seems like, um, maybe let's start recording when we recording still. Yes. We are recording still. No, let's talk. Let's talk calendars now. Okay, we can stop. That's a brilliant. Yeah, yeah. That was so good. Yeah, that was so fun too. Okay. So that's stuff now? Yeah, yeah, yeah. Okay. All right. I'm stopping.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 487.8,
      "text": "All , today, Erica and I are the process of mapping jobs. And I am taking the reference of the old mapping that I had done about one and a half years ago, which might not be perfect, but this is what we are base our discussion on. How I started with this mapping is I'm not sharing my screen and I totally should. All , is it. Visible enough? , great. I started off with the making a note of the core functional jobs that users come to perform when we are talking about all things verify. at this stage, I was not even focusing a lot on just pipe and execution or just continuous integration. I was thinking of everything that users would want to do with the features that we group under verify. And from there, I consolidated the core jobs into this one particular statement and this statement says to standardize an automate tests builds and deploy process across organization to allow easy contribution while keeping them. The main branch screen, which is main branch, healthy. And I kept this as a reference for the core job that we are be referring to. The next part was thinking of who would be executing the jobs. The circles in the innermost circle are the core executors. for core executors, I thought of personas that we very frequently refer to the DevOps engineers, the software engineer, the developer. And a little outside that circle on its periphery, I was imagining personnel such as system administrator compliance manager, release manager development team lead because in the process that release managers follow and compliance managers follow the processes, they are very much around pipelines because pipelines enables the release process and. Following the compliance guidelines and then who else can use pipelines and related features. The idea is anybody can because taking a reference of a company get love where we work. Everybody runs pipelines, everybody merges their changes, everybody interacts with that in their day to day job. I skipped this part because I was not able to get a very good hang of what's the value that this adding and I'm not saying that that was really great step on my part, but just stating that it wasn't. Coming to the job map part, we have these stages which come predefined and I tried to segregate all the primary not primary, although jobs that were that were documented here earlier into these buckets into these different stages, let's say. And I started off if we talk about defining and we talk about pipelines, then what are the jobs, which are relevant at that stage and of course what's relevant is defining a new pipeline but to put it in a more functional way without. focusing a lot on the tool and the exact mechanisms that we are providing today, I wrote that defining standard standards tests and commands for organizations to test for the deploy. And as written keeping in mind that users have to author the pipeline before they can even before they can do anything else for that then comes the part of locating make a aware of available test suite or explain the process for using existing pipeline. And on, what I saw was since we had made this division in the responsibilities of the two stage groups, by the not string and by an execution and we mentioned that everything that relates to defining the pipeline or editing the pipeline it's under the purview of type and altering and by the pipe and is running that's when. It is it comes under the categories under higher than execution . It starts with where would be make the this option available to users to. Avail the automated tests and processes that's where we are talking about the discovery of all features which are related to our current execution or continuous integration next was just confirming enable using environment specific process this particular stage we are only talking about maybe. Confirming the action and next was when pipe and has already started to execute when the. I'm using the term pipeline here which is not ideal and I just want to make a note that we are still talking about those automated tests but since it's just i'm going through the process i'm just using terms which are not very caught off. And when we come to the execute stage this is exactly what pipeline execution category stick care of when the pipeline is running when the runner is picking up jobs executing those. What is the job what what is the real job that we are referring to here what is. What is it what is it that users have come to do on get lab that we are making happen through these through the set of feature and the next was. Yeah. That note and this is perfect but where do the devs come in and is this execute the between the handoff between stage four and stage five is that how we distinguish authoring from. From execution. Not really I think that defining. Is apart that's mostly played by DevOps engineers or the time leads and it it's not something very. But it's not a hard and fast because it totally depends on the composition of the teams if it's a very short team then maybe there's one developer who's responsible for the pipeline as apart from the day to day job of writing a software but in big enterprise teams there would be a dedicated DevOps engineer or they might even be an s re who's take. Or read responsibility of all things that relates to defining or writing the pipeline or editing the pipeline whether handoff really happens is. I would say. Not even look it prepare. Because when developers are merging their changes. They are looking for initiating these. automated tests and once they initiate that and confirm, this is the part where their role kicks in. .",
      "tokens": [
        50364,
        1057,
        558,
        11,
        370,
        965,
        11,
        37429,
        293,
        286,
        366,
        516,
        281,
        264,
        1399,
        295,
        18350,
        4782,
        13,
        50914
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23093929290771484,
      "compression_ratio": 1.4970760233918128,
      "no_speech_prob": 0.06278952211141586
    },
    {
      "id": 45,
      "seek": 47700,
      "start": 493.4,
      "end": 663.8,
      "text": "And then, to some degree, the people upstream are defining the tests or do we think as define the tests? Are they just running them? They're just running them because they cannot define anymore. The definition of the pipeline has already been written and they only can avail what's already there. , got it. Thank you, Tony. Yeah. And the next part is of course, monitor because when the jobs are being executed, at that time, there would be some degree of anxiety among the developers. , I initiated this. I have other things to look at. How is this progressing? Would I have to come back and dedicate more time to this? they want some piece of mind. And that's where the monitoring part comes in. They want to easily be able to examine and monitor the running pipeline and observe if the safety measures are in place. For example, they want to be assured that the variables that they're passing through the jobs, they're not getting leaked anywhere. There's no security threat that's underway. And in case something goes here and there, , not as expected, then there is a chance of modifying. , there's a scope to modify the definition, but again, one has to have the proper, the access to make those modifications. And here the same person who can define can also modify. maybe this, this is a reverse handoff. where the developers are communicating with the demo sentinus. , cool. Good. And then stage seven, and then tell me a little bit about stage four, or stage five. Are they in? What do we think they're doing in stage five? Yeah, stage four, if I talk to you in terms of the exact action that you are performing on the product. when you, when you click on creating the merge request, when the creation of MR is initiated, at the same time, the pipeline also gets started. that's one. And then another option to do this is when you go to your pipeline page, pipeline index page, and you click on the blue button, which is on the top corner, that's his run pipeline. That's when you're confirming that action, which is initiating a pipeline. that's where the execution begins.",
      "tokens": [
        51184,
        400,
        550,
        11,
        281,
        512,
        4314,
        11,
        264,
        561,
        33915,
        366,
        17827,
        264,
        6921,
        420,
        360,
        321,
        519,
        51656
      ],
      "temperature": 0.0,
      "avg_logprob": -0.38071587506462545,
      "compression_ratio": 1.4316546762589928,
      "no_speech_prob": 0.058242786675691605
    },
    {
      "id": 71,
      "seek": 65340,
      "start": 667.56,
      "end": 674.36,
      "text": ". And then devs do that for sure. Yes, yes, devs do that. .",
      "tokens": [
        51072,
        1033,
        13,
        400,
        550,
        1905,
        82,
        360,
        300,
        337,
        988,
        13,
        1079,
        11,
        2086,
        11,
        1905,
        82,
        360,
        300,
        13,
        1033,
        13,
        51412
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23481040403067346,
      "compression_ratio": 1.653179190751445,
      "no_speech_prob": 0.0044767349027097225
    },
    {
      "id": 72,
      "seek": 65340,
      "start": 677.16,
      "end": 682.04,
      "text": ", cool. And then five. , my God.",
      "tokens": [
        51552,
        1033,
        11,
        1627,
        13,
        400,
        550,
        1732,
        13,
        51688
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23481040403067346,
      "compression_ratio": 1.653179190751445,
      "no_speech_prob": 0.0044767349027097225
    },
    {
      "id": 74,
      "seek": 67988,
      "start": 685.24,
      "end": 864.6,
      "text": "Yeah, five is monitoring. this can be targeting both the personas. I know that jobs have to be person-agnostic, but talking in terms of who's doing the who the, who the main executor here is. Developers are expecting different things when they are talking about monitoring the pipelines and the devops engineers or someone sitting at the very top at the director level, they're expecting something very different from monitoring. They want to see in terms of usage, how things are probably. Go back to execute, because even execute looks in this version of the world that execute is running the tests. Yes. all of that seems really security-based. And I think that's in this job, agnostic way, but I think that one way we could frame that that it would cover what you're saying about that coming from other people. And I am in this study where we're looking at the product, the life cycle for infrastructure resources and talking about those different components and who and also for secrets and who's in charge of those systems. It's not, it's sometimes the dev ops people, but it's coming from the CTO or a security officer or there they're doing that in coordination. one thing we could do is frame that stage in terms of what I work with my needs to align with our security standards. Yes. Yeah, that's a really great point. That's something that I definitely missed noting here that even though the executor, especially in the context of the execute state, it's it might be the developer, but the job that the job the user who the job should target might be some entirely different the compliance manager or the release manager or who's our concern. Yes, it's teamwork. Yeah. Yeah. one thing that I saw in the video today, in one of the videos that I was watching is there the person talked about that let's say you're working for a B2B company and you have a buyer, but the buyer is not your user. The buyer is of course purchasing from you, but you should never build the persona, build the jobs to be done targeting the buyer because it has to be about the user or the user is trying to accomplish. even though we're not talking about the buyer here, but in terms of who the jobs to be done should target the end user of that, I think in this case it's different set of people.",
      "tokens": [
        50632,
        865,
        11,
        1732,
        307,
        11028,
        13,
        407,
        341,
        393,
        312,
        17918,
        411,
        1293,
        264,
        12019,
        13,
        50920
      ],
      "temperature": 0.0,
      "avg_logprob": -0.28892913231482875,
      "compression_ratio": 1.5974025974025974,
      "no_speech_prob": 0.011394387111067772
    },
    {
      "id": 99,
      "seek": 85644,
      "start": 866.7600000000001,
      "end": 969.32,
      "text": "Yeah, or at least they're in control and the developers are working within those. Yes, how it bar rails. Yeah. . And then stage six, six, six, yes. I had mentioned that from stage six, different personas would have different expectations. Here, it's feared because now when I think of it that even though this involves defining the core executors at the very beginning, I think the core executors for every stage is different. Yeah, because I'm thinking that yeah, the stage six, the devs are hands on again, ? Yes. . Yeah, but should it matter who's the most hands on? Should it matter who's concern is this particular stage attendant to? , I think that's why the jobs to be done, at least this is the page, this is the handbook page with Jackie's video that I can understand it. because the job can be anybody that does it, but eventually the person when it becomes a jobs to be done, the persona steps in. Because it says in this handbook, a page says job, deploy and build into place offer and then job performer is an element of jobs to be done and that brings in the persona.",
      "tokens": [
        50880,
        865,
        11,
        420,
        412,
        1935,
        436,
        434,
        294,
        1969,
        293,
        264,
        8849,
        366,
        1364,
        1951,
        729,
        13,
        51192
      ],
      "temperature": 0.0,
      "avg_logprob": -0.33710047777961283,
      "compression_ratio": 1.4550898203592815,
      "no_speech_prob": 0.014145431108772755
    },
    {
      "id": 112,
      "seek": 96332,
      "start": 971.8000000000001,
      "end": 1010.52,
      "text": "Which is part of the circumstance. Yes, but I could get us in a lot of trouble because I'm not sure that I'm tracking how we do it here, but that's how I think it that's that's what , we want to just be able to pull out not the jobs to be done, but even just the job. But I think the job is more about how we said, making the releases more efficient in a way that is secure. Yeah. For that meets the security requirements.",
      "tokens": [
        50788,
        3013,
        307,
        644,
        295,
        264,
        27640,
        13,
        1079,
        11,
        457,
        286,
        727,
        483,
        505,
        294,
        257,
        688,
        295,
        5253,
        570,
        286,
        478,
        406,
        51132
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1350029165094549,
      "compression_ratio": 1.6919431279620853,
      "no_speech_prob": 0.00029837244073860347
    },
    {
      "id": 117,
      "seek": 99172,
      "start": 1013.72,
      "end": 1031.16,
      "text": "We did within my company. Yeah, I think thinking in the constraint, only thinking in the constraint of the executive person, as that we shortly start at the beginning, I think that's a wrong approach.",
      "tokens": [
        51464,
        492,
        630,
        1951,
        452,
        2237,
        13,
        51540
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3596371078491211,
      "compression_ratio": 1.3496503496503496,
      "no_speech_prob": 0.0009432972292415798
    },
    {
      "id": 120,
      "seek": 101524,
      "start": 1033.24,
      "end": 1059.24,
      "text": "That limits in some way, how we are defining the job should be done and it might not be because a developer would never be too concerned about the compliance standards or the security standards. It would always be somebody else, but if I only think of what the developer is trying to achieve here, I might get things wrong. What do you think?",
      "tokens": [
        51264,
        663,
        733,
        295,
        10406,
        294,
        512,
        636,
        11,
        411,
        577,
        321,
        366,
        17827,
        264,
        1691,
        820,
        312,
        1096,
        293,
        309,
        1062,
        406,
        312,
        51592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.26935822216432487,
      "compression_ratio": 1.608187134502924,
      "no_speech_prob": 0.0075418055057525635
    },
    {
      "id": 124,
      "seek": 103980,
      "start": 1061.56,
      "end": 1153.08,
      "text": "Yeah, , I think we want to just talk to them about these about what they're trying to do, because some of them I've talked to are in charge of security stuff, but they're not the author, how we're doing it. We can also have a discussion around this. Yeah. No, and I think that , even now, one question I have is just , where does Nadi has work stop up and then your work pick up? , I'm not even sure there. this modified part where I talked about a reverse handover, this is Nadi's, and then this is Nadi's define and to some extent locate. , I think that's what I think I'm always wanting to make it a literal break off, but that's good. . Yeah. Yeah. And then I did this small exercise of prioritization. At this point, I couldn't tell what the colors denote, because I was smart enough not to make an index for that. But yeah, we had a synchronous session, B and the PM, and we talked about which are the most important and most important personas, but we satisfy it, we mark them as opportunities for ourselves. this is the area where we should be thinking of making improvements in our future of plans for categories.",
      "tokens": [
        51452,
        865,
        11,
        286,
        914,
        11,
        286,
        519,
        321,
        528,
        281,
        445,
        751,
        281,
        552,
        466,
        613,
        466,
        437,
        436,
        434,
        1382,
        281,
        360,
        11,
        51792
      ],
      "temperature": 0.0,
      "avg_logprob": -0.11952994851505055,
      "compression_ratio": 1.6511627906976745,
      "no_speech_prob": 0.0012786276638507843
    },
    {
      "id": 137,
      "seek": 114900,
      "start": 1156.36,
      "end": 1162.84,
      "text": "And then yeah, , it feels we're implicitly mapping the",
      "tokens": [
        50732,
        400,
        550,
        1338,
        11,
        286,
        914,
        11,
        309,
        3417,
        411,
        321,
        434,
        26947,
        356,
        18350,
        264,
        51056
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17717465332576207,
      "compression_ratio": 1.4768211920529801,
      "no_speech_prob": 0.00015537549916189164
    },
    {
      "id": 138,
      "seek": 114900,
      "start": 1165.96,
      "end": 1181.08,
      "text": "personas to the stages. But what if we just make the job, making the release, making the releases, is it of my software, more efficient in a way that meets the security requirements",
      "tokens": [
        51212,
        12019,
        281,
        264,
        10232,
        13,
        583,
        437,
        498,
        321,
        445,
        652,
        264,
        1691,
        11,
        1455,
        264,
        4374,
        11,
        1455,
        264,
        16952,
        11,
        51556
      ],
      "temperature": 0.0,
      "avg_logprob": -0.17717465332576207,
      "compression_ratio": 1.4768211920529801,
      "no_speech_prob": 0.00015537549916189164
    },
    {
      "id": 140,
      "seek": 117284,
      "start": 1183.3999999999999,
      "end": 1202.2,
      "text": "of the software, which didn't say mine, that making the releases of software more efficient in a way that meets the security requirements of our company, our company, in the way that meets company security requirements. Because that will cover this whole flow.",
      "tokens": [
        50892,
        295,
        264,
        4722,
        11,
        597,
        994,
        380,
        584,
        3892,
        11,
        300,
        1455,
        264,
        16952,
        295,
        4722,
        544,
        7148,
        294,
        257,
        51156
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23818089885096397,
      "compression_ratio": 2.068702290076336,
      "no_speech_prob": 0.0028280504047870636
    },
    {
      "id": 143,
      "seek": 119604,
      "start": 1204.36,
      "end": 1233.8000000000002,
      "text": "That's also what confuses me is whether or not the job needs to cover a whole flow or yeah, that's where the elevation and the granularity that mapping comes into picture. we can if you map it as a reverse triangle, then what you're saying, that can totally be the core jobs to be done, which is at the highest level. And then when we try to break it further, it would be, it would cover the flow.",
      "tokens": [
        50780,
        663,
        311,
        611,
        437,
        1497,
        8355,
        385,
        307,
        1968,
        420,
        406,
        264,
        1691,
        2203,
        281,
        2060,
        257,
        1379,
        3095,
        420,
        51052
      ],
      "temperature": 0.0,
      "avg_logprob": -0.16427700860159739,
      "compression_ratio": 1.6009174311926606,
      "no_speech_prob": 0.002373805968090892
    },
    {
      "id": 148,
      "seek": 122492,
      "start": 1236.8400000000001,
      "end": 1237.16,
      "text": ".",
      "tokens": [
        50960,
        1033,
        13,
        50976
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1967426852176064,
      "compression_ratio": 1.497142857142857,
      "no_speech_prob": 0.0006881649605929852
    },
    {
      "id": 149,
      "seek": 122492,
      "start": 1242.1200000000001,
      "end": 1267.24,
      "text": "I love that reverse triangle. Yep. , and then , let's talk about a little bit about where the merge trains come in. tell you. And then I think the merge trains come in at five stage five. Yes, they do. That's . . And then the, what was that other thing?",
      "tokens": [
        51224,
        286,
        959,
        300,
        9943,
        13369,
        13,
        7010,
        13,
        51320
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1967426852176064,
      "compression_ratio": 1.497142857142857,
      "no_speech_prob": 0.0006881649605929852
    },
    {
      "id": 153,
      "seek": 125324,
      "start": 1272.36,
      "end": 1288.92,
      "text": "Yeah. I think, because we were talking about combining those two studies. Mm-hmm. I think that's how we can think about it is mapping out. Can we think about it mapping out the jobs to be done across this one job workflow?",
      "tokens": [
        51320,
        865,
        13,
        407,
        286,
        519,
        11,
        370,
        570,
        321,
        645,
        1417,
        466,
        21928,
        729,
        732,
        5313,
        13,
        51512
      ],
      "temperature": 0.0,
      "avg_logprob": -0.20778429146968957,
      "compression_ratio": 1.4216867469879517,
      "no_speech_prob": 0.00015455097309313715
    },
    {
      "id": 157,
      "seek": 127620,
      "start": 1292.3600000000001,
      "end": 1335.56,
      "text": "Merge trains execute. enter the note for the one job workflow. The one that you mentioned about the one that you had framed. Yeah. That can be, in my case, I had something for the core job. And for the new mapping, what you mentioned could be our core job. I think . Yeah, the top of the triangle one. And then I think is what our main research goal can be. Or where research question can be would be to figure out. Where did I write it? I wrote it.",
      "tokens": [
        51172,
        6124,
        432,
        16329,
        14483,
        13,
        286,
        478,
        516,
        281,
        3242,
        264,
        3637,
        337,
        264,
        472,
        1691,
        20993,
        13,
        440,
        472,
        300,
        291,
        2835,
        51520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2790929175711967,
      "compression_ratio": 1.619047619047619,
      "no_speech_prob": 0.0030465321615338326
    },
    {
      "id": 162,
      "seek": 132676,
      "start": 1342.76,
      "end": 1367.8799999999999,
      "text": "Yeah, how do we help developers to. How do we? Yeah, here it is. How do we help developers? Oh no, how do we help users? Because we don't want to say users to make their releases more efficient.",
      "tokens": [
        51164,
        865,
        11,
        577,
        360,
        321,
        854,
        8849,
        281,
        13,
        1012,
        360,
        321,
        30,
        865,
        11,
        510,
        309,
        307,
        13,
        1012,
        360,
        321,
        854,
        8849,
        30,
        51580
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2568199157714844,
      "compression_ratio": 1.4960629921259843,
      "no_speech_prob": 0.0011663107434287667
    },
    {
      "id": 164,
      "seek": 135108,
      "start": 1373.08,
      "end": 1386.3600000000001,
      "text": "that could be of this combined research study. We can say that's our primary goal. that could be the name of the research study. And then our approach could be.",
      "tokens": [
        51464,
        407,
        300,
        727,
        312,
        295,
        341,
        9354,
        2132,
        2979,
        13,
        492,
        393,
        584,
        300,
        311,
        527,
        6194,
        3387,
        13,
        1743,
        300,
        51784
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2680928473379098,
      "compression_ratio": 1.337837837837838,
      "no_speech_prob": 0.0008112456416711211
    },
    {
      "id": 166,
      "seek": 137948,
      "start": 1390.84,
      "end": 1422.84,
      "text": "We could even have we could even have these stages here and then say walk us through your process with these stages. ideally they would show us in the tool, but they are sometimes not what they don't want to do that. we could just put this in a deck and then have them talk through first to say where are you involved in this flow, ? Yeah. And then say, , now unpack what are your goals here? What are you trying to do and what are your key tasks?",
      "tokens": [
        50932,
        492,
        727,
        754,
        362,
        321,
        727,
        754,
        362,
        613,
        10232,
        510,
        293,
        550,
        584,
        411,
        51192
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1256444398746934,
      "compression_ratio": 1.70935960591133,
      "no_speech_prob": 0.0003062114992644638
    },
    {
      "id": 170,
      "seek": 140804,
      "start": 1425.56,
      "end": 1466.44,
      "text": "that's. I think that sounds good. Yeah. It would be critical though. Yeah, because my current plan was to create the initial mapping by myself and then go to validation, but this is much better because we won't have to take a U-turn at any part of the process. Yeah, I think . And then we just get them to tell us. And it's ideally we wouldn't do that, but this is such a technical space that I think it's defensible. Hold it. We're not asking me. Yeah, I think it's . , . the method would be to interview to work through.",
      "tokens": [
        51240,
        407,
        300,
        311,
        13,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.34302435250117863,
      "compression_ratio": 1.4342105263157894,
      "no_speech_prob": 0.0002569305070210248
    },
    {
      "id": 175,
      "seek": 145580,
      "start": 1471.56,
      "end": 1481.56,
      "text": "The different stages involved in pipelines. To see where our users.",
      "tokens": [
        51152,
        440,
        819,
        10232,
        3288,
        294,
        40168,
        13,
        51452
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3887147903442383,
      "compression_ratio": 1.3006993006993006,
      "no_speech_prob": 0.001135862316004932
    },
    {
      "id": 177,
      "seek": 148580,
      "start": 1486.04,
      "end": 1491.72,
      "text": "Working and what their goals are.",
      "tokens": [
        50376,
        18337,
        293,
        437,
        641,
        5493,
        366,
        13,
        50660
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3169074194771903,
      "compression_ratio": 1.1923076923076923,
      "no_speech_prob": 0.004080068785697222
    },
    {
      "id": 178,
      "seek": 148580,
      "start": 1496.36,
      "end": 1530.8,
      "text": "Do you think they'll recognize these parks or it doesn't matter. We can even just say, , we can even just say this is how we're defining this isn't in define, locate, prepare, confirm. Is that coming from us in any way or that's not coming from us that's coming from the , job, stability and templates. If you think changing this to and even combining a few stages would help, which I think would help. For example, I don't see very clear differentiation between prepare and confirm here. It's .",
      "tokens": [
        50892,
        1144,
        291,
        519,
        436,
        603,
        5521,
        613,
        16213,
        420,
        309,
        1177,
        380,
        1871,
        13,
        492,
        393,
        754,
        445,
        584,
        11,
        1105,
        11,
        51180
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3169074194771903,
      "compression_ratio": 1.1923076923076923,
      "no_speech_prob": 0.004080068785697222
    },
    {
      "id": 182,
      "seek": 152956,
      "start": 1534.24,
      "end": 1601.3200000000002,
      "text": "Maybe that's an idea too is maybe what we do first is just say from your perspective, let's map out. What are the different stages. card sorting without providing cards. , yeah. what I end up doing, I'll show you one of these sessions, but what I end up doing is just making shapes with them and having them talk about it. , what we're doing now with the, , the secrets lifecycle is just to be , tell me about a secret. Where's the beginning. What's the middle. What's the end. And then they articulated there. But in that one, we're , who what where when. But I think in this one, we would just be , where does your process start. But I'm not the only thing I'm not sure about there is how we frame it. Yeah. keeping it open ended, but , nudging them to define those stages themselves. Yeah. And what's what do we say this? What is at the stages of.",
      "tokens": [
        50598,
        2704,
        300,
        311,
        364,
        1558,
        886,
        307,
        1310,
        437,
        321,
        360,
        700,
        307,
        445,
        584,
        490,
        428,
        4585,
        11,
        718,
        311,
        4471,
        484,
        13,
        708,
        366,
        264,
        819,
        10232,
        13,
        51164
      ],
      "temperature": 0.0,
      "avg_logprob": -0.5384111037621131,
      "compression_ratio": 1.3706293706293706,
      "no_speech_prob": 0.00798027217388153
    },
    {
      "id": 191,
      "seek": 160516,
      "start": 1605.24,
      "end": 1608.92,
      "text": "What is that? What do we, how do we say it? , how do you.",
      "tokens": [
        50368,
        708,
        307,
        300,
        30,
        708,
        360,
        321,
        11,
        577,
        360,
        321,
        584,
        309,
        30,
        4019,
        11,
        577,
        360,
        291,
        13,
        50552
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37884369815688534,
      "compression_ratio": 1.6271186440677967,
      "no_speech_prob": 0.0012055154656991363
    },
    {
      "id": 192,
      "seek": 160516,
      "start": 1611.0,
      "end": 1614.76,
      "text": "Your perspective, what are the stages of a pipeline.",
      "tokens": [
        50656,
        2260,
        4585,
        11,
        437,
        366,
        264,
        10232,
        295,
        257,
        15517,
        13,
        50844
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37884369815688534,
      "compression_ratio": 1.6271186440677967,
      "no_speech_prob": 0.0012055154656991363
    },
    {
      "id": 193,
      "seek": 160516,
      "start": 1616.8400000000001,
      "end": 1620.76,
      "text": "Of pipeline execution of pipeline. ,",
      "tokens": [
        50948,
        2720,
        15517,
        15058,
        295,
        15517,
        13,
        3301,
        11,
        51144
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37884369815688534,
      "compression_ratio": 1.6271186440677967,
      "no_speech_prob": 0.0012055154656991363
    },
    {
      "id": 194,
      "seek": 160516,
      "start": 1623.16,
      "end": 1634.52,
      "text": "the stages of. How you were. Oh, should we keep it a little more generic and talk about what are the stages of verifying your code. Got it.",
      "tokens": [
        51264,
        264,
        10232,
        295,
        13,
        51324
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37884369815688534,
      "compression_ratio": 1.6271186440677967,
      "no_speech_prob": 0.0012055154656991363
    },
    {
      "id": 197,
      "seek": 163316,
      "start": 1639.16,
      "end": 1653.72,
      "text": "Yeah. And what we can say to we can say not from your perspective or what , that's fine too, but we could just say tell us how your teams are breaking up the process of verifying your code into stages.",
      "tokens": [
        50664,
        865,
        13,
        400,
        291,
        458,
        437,
        321,
        393,
        584,
        281,
        411,
        321,
        393,
        584,
        411,
        406,
        490,
        428,
        4585,
        420,
        411,
        437,
        286,
        914,
        11,
        300,
        311,
        2489,
        886,
        11,
        457,
        321,
        727,
        445,
        584,
        980,
        505,
        577,
        428,
        5491,
        366,
        7697,
        493,
        264,
        1399,
        295,
        1306,
        5489,
        428,
        3089,
        666,
        10232,
        13,
        51392
      ],
      "temperature": 0.0,
      "avg_logprob": -0.27058935165405273,
      "compression_ratio": 1.4808743169398908,
      "no_speech_prob": 0.00033461389830335975
    },
    {
      "id": 198,
      "seek": 163316,
      "start": 1656.44,
      "end": 1666.28,
      "text": "I'm liking where this is going. Yeah. Yeah. This is the information that , they never asked for.",
      "tokens": [
        51528,
        286,
        478,
        16933,
        689,
        341,
        307,
        516,
        13,
        51592
      ],
      "temperature": 0.0,
      "avg_logprob": -0.27058935165405273,
      "compression_ratio": 1.4808743169398908,
      "no_speech_prob": 0.00033461389830335975
    },
    {
      "id": 202,
      "seek": 165772,
      "start": 1669.24,
      "end": 1804.28,
      "text": "Mm-hmm. I think we want to step back. Tell us how your team, especially if you have the bandwidth. Tell us how your teams are breaking up the process of verifying your code. Mm-hmm. And the good part is the same set of information can also be useful for Gina and Nadia. Yeah. , , yeah, because they're in this flow too, ? Yeah. Yeah. . At some point we'll need to put, where is, can we do it now really quickly? To help my brain? What stage is Gina doing? , pipe and insights and runner. But in this, I these stages. . All . I thought stage groups. That's what was going on in the mind. here we should call them, maybe we should call them steps we don't confuse ourselves. , I think execute. Execute is where both the stage groups are genius working with would very fit. And sorry, the pipeline insights can be more about monitor, . Stage six. Yes. And runner is of course execute because when the, , jobs are being executed, that's when the role of runner kicks in. . . it's a look up here. stage one, stage five is Gina when she's doing runners. Yes. . How does one day we'll talk about how runners and merge trains interact? It's all in that. It's hopefully in that blog post. , . Cool. , yeah. . , it seems , , maybe let's start recording when we recording still. Yes. We are recording still. No, let's talk. Let's talk calendars now. , we can stop. That's a brilliant. Yeah, yeah. That was good. Yeah, that was fun too. . that's stuff now? Yeah, yeah, yeah. . All . I'm stopping.",
      "tokens": [
        50940,
        8266,
        12,
        10250,
        13,
        50984
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3943776681389607,
      "compression_ratio": 1.4939759036144578,
      "no_speech_prob": 0.0014154489617794752
    }
  ],
  "full_text": "All , today, Erica and I are the process of mapping jobs. And I am taking the reference of the old mapping that I had done about one and a half years ago, which might not be perfect, but this is what we are base our discussion on. How I started with this mapping is I'm not sharing my screen and I totally should. All , is it. Visible enough? , great. I started off with the making a note of the core functional jobs that users come to perform when we are talking about all things verify. at this stage, I was not even focusing a lot on just pipe and execution or just continuous integration. I was thinking of everything that users would want to do with the features that we group under verify. And from there, I consolidated the core jobs into this one particular statement and this statement says to standardize an automate tests builds and deploy process across organization to allow easy contribution while keeping them. The main branch screen, which is main branch, healthy. And I kept this as a reference for the core job that we are be referring to. The next part was thinking of who would be executing the jobs. The circles in the innermost circle are the core executors. for core executors, I thought of personas that we very frequently refer to the DevOps engineers, the software engineer, the developer. And a little outside that circle on its periphery, I was imagining personnel such as system administrator compliance manager, release manager development team lead because in the process that release managers follow and compliance managers follow the processes, they are very much around pipelines because pipelines enables the release process and. Following the compliance guidelines and then who else can use pipelines and related features. The idea is anybody can because taking a reference of a company get love where we work. Everybody runs pipelines, everybody merges their changes, everybody interacts with that in their day to day job. I skipped this part because I was not able to get a very good hang of what's the value that this adding and I'm not saying that that was really great step on my part, but just stating that it wasn't. Coming to the job map part, we have these stages which come predefined and I tried to segregate all the primary not primary, although jobs that were that were documented here earlier into these buckets into these different stages, let's say. And I started off if we talk about defining and we talk about pipelines, then what are the jobs, which are relevant at that stage and of course what's relevant is defining a new pipeline but to put it in a more functional way without. focusing a lot on the tool and the exact mechanisms that we are providing today, I wrote that defining standard standards tests and commands for organizations to test for the deploy. And as written keeping in mind that users have to author the pipeline before they can even before they can do anything else for that then comes the part of locating make a aware of available test suite or explain the process for using existing pipeline. And on, what I saw was since we had made this division in the responsibilities of the two stage groups, by the not string and by an execution and we mentioned that everything that relates to defining the pipeline or editing the pipeline it's under the purview of type and altering and by the pipe and is running that's when. It is it comes under the categories under higher than execution . It starts with where would be make the this option available to users to. Avail the automated tests and processes that's where we are talking about the discovery of all features which are related to our current execution or continuous integration next was just confirming enable using environment specific process this particular stage we are only talking about maybe. Confirming the action and next was when pipe and has already started to execute when the. I'm using the term pipeline here which is not ideal and I just want to make a note that we are still talking about those automated tests but since it's just i'm going through the process i'm just using terms which are not very caught off. And when we come to the execute stage this is exactly what pipeline execution category stick care of when the pipeline is running when the runner is picking up jobs executing those. What is the job what what is the real job that we are referring to here what is. What is it what is it that users have come to do on get lab that we are making happen through these through the set of feature and the next was. Yeah. That note and this is perfect but where do the devs come in and is this execute the between the handoff between stage four and stage five is that how we distinguish authoring from. From execution. Not really I think that defining. Is apart that's mostly played by DevOps engineers or the time leads and it it's not something very. But it's not a hard and fast because it totally depends on the composition of the teams if it's a very short team then maybe there's one developer who's responsible for the pipeline as apart from the day to day job of writing a software but in big enterprise teams there would be a dedicated DevOps engineer or they might even be an s re who's take. Or read responsibility of all things that relates to defining or writing the pipeline or editing the pipeline whether handoff really happens is. I would say. Not even look it prepare. Because when developers are merging their changes. They are looking for initiating these. automated tests and once they initiate that and confirm, this is the part where their role kicks in. . And then, to some degree, the people upstream are defining the tests or do we think as define the tests? Are they just running them? They're just running them because they cannot define anymore. The definition of the pipeline has already been written and they only can avail what's already there. , got it. Thank you, Tony. Yeah. And the next part is of course, monitor because when the jobs are being executed, at that time, there would be some degree of anxiety among the developers. , I initiated this. I have other things to look at. How is this progressing? Would I have to come back and dedicate more time to this? they want some piece of mind. And that's where the monitoring part comes in. They want to easily be able to examine and monitor the running pipeline and observe if the safety measures are in place. For example, they want to be assured that the variables that they're passing through the jobs, they're not getting leaked anywhere. There's no security threat that's underway. And in case something goes here and there, , not as expected, then there is a chance of modifying. , there's a scope to modify the definition, but again, one has to have the proper, the access to make those modifications. And here the same person who can define can also modify. maybe this, this is a reverse handoff. where the developers are communicating with the demo sentinus. , cool. Good. And then stage seven, and then tell me a little bit about stage four, or stage five. Are they in? What do we think they're doing in stage five? Yeah, stage four, if I talk to you in terms of the exact action that you are performing on the product. when you, when you click on creating the merge request, when the creation of MR is initiated, at the same time, the pipeline also gets started. that's one. And then another option to do this is when you go to your pipeline page, pipeline index page, and you click on the blue button, which is on the top corner, that's his run pipeline. That's when you're confirming that action, which is initiating a pipeline. that's where the execution begins. . And then devs do that for sure. Yes, yes, devs do that. . , cool. And then five. , my God. Yeah, five is monitoring. this can be targeting both the personas. I know that jobs have to be person-agnostic, but talking in terms of who's doing the who the, who the main executor here is. Developers are expecting different things when they are talking about monitoring the pipelines and the devops engineers or someone sitting at the very top at the director level, they're expecting something very different from monitoring. They want to see in terms of usage, how things are probably. Go back to execute, because even execute looks in this version of the world that execute is running the tests. Yes. all of that seems really security-based. And I think that's in this job, agnostic way, but I think that one way we could frame that that it would cover what you're saying about that coming from other people. And I am in this study where we're looking at the product, the life cycle for infrastructure resources and talking about those different components and who and also for secrets and who's in charge of those systems. It's not, it's sometimes the dev ops people, but it's coming from the CTO or a security officer or there they're doing that in coordination. one thing we could do is frame that stage in terms of what I work with my needs to align with our security standards. Yes. Yeah, that's a really great point. That's something that I definitely missed noting here that even though the executor, especially in the context of the execute state, it's it might be the developer, but the job that the job the user who the job should target might be some entirely different the compliance manager or the release manager or who's our concern. Yes, it's teamwork. Yeah. Yeah. one thing that I saw in the video today, in one of the videos that I was watching is there the person talked about that let's say you're working for a B2B company and you have a buyer, but the buyer is not your user. The buyer is of course purchasing from you, but you should never build the persona, build the jobs to be done targeting the buyer because it has to be about the user or the user is trying to accomplish. even though we're not talking about the buyer here, but in terms of who the jobs to be done should target the end user of that, I think in this case it's different set of people. Yeah, or at least they're in control and the developers are working within those. Yes, how it bar rails. Yeah. . And then stage six, six, six, yes. I had mentioned that from stage six, different personas would have different expectations. Here, it's feared because now when I think of it that even though this involves defining the core executors at the very beginning, I think the core executors for every stage is different. Yeah, because I'm thinking that yeah, the stage six, the devs are hands on again, ? Yes. . Yeah, but should it matter who's the most hands on? Should it matter who's concern is this particular stage attendant to? , I think that's why the jobs to be done, at least this is the page, this is the handbook page with Jackie's video that I can understand it. because the job can be anybody that does it, but eventually the person when it becomes a jobs to be done, the persona steps in. Because it says in this handbook, a page says job, deploy and build into place offer and then job performer is an element of jobs to be done and that brings in the persona. Which is part of the circumstance. Yes, but I could get us in a lot of trouble because I'm not sure that I'm tracking how we do it here, but that's how I think it that's that's what , we want to just be able to pull out not the jobs to be done, but even just the job. But I think the job is more about how we said, making the releases more efficient in a way that is secure. Yeah. For that meets the security requirements. We did within my company. Yeah, I think thinking in the constraint, only thinking in the constraint of the executive person, as that we shortly start at the beginning, I think that's a wrong approach. That limits in some way, how we are defining the job should be done and it might not be because a developer would never be too concerned about the compliance standards or the security standards. It would always be somebody else, but if I only think of what the developer is trying to achieve here, I might get things wrong. What do you think? Yeah, , I think we want to just talk to them about these about what they're trying to do, because some of them I've talked to are in charge of security stuff, but they're not the author, how we're doing it. We can also have a discussion around this. Yeah. No, and I think that , even now, one question I have is just , where does Nadi has work stop up and then your work pick up? , I'm not even sure there. this modified part where I talked about a reverse handover, this is Nadi's, and then this is Nadi's define and to some extent locate. , I think that's what I think I'm always wanting to make it a literal break off, but that's good. . Yeah. Yeah. And then I did this small exercise of prioritization. At this point, I couldn't tell what the colors denote, because I was smart enough not to make an index for that. But yeah, we had a synchronous session, B and the PM, and we talked about which are the most important and most important personas, but we satisfy it, we mark them as opportunities for ourselves. this is the area where we should be thinking of making improvements in our future of plans for categories. And then yeah, , it feels we're implicitly mapping the personas to the stages. But what if we just make the job, making the release, making the releases, is it of my software, more efficient in a way that meets the security requirements of the software, which didn't say mine, that making the releases of software more efficient in a way that meets the security requirements of our company, our company, in the way that meets company security requirements. Because that will cover this whole flow. That's also what confuses me is whether or not the job needs to cover a whole flow or yeah, that's where the elevation and the granularity that mapping comes into picture. we can if you map it as a reverse triangle, then what you're saying, that can totally be the core jobs to be done, which is at the highest level. And then when we try to break it further, it would be, it would cover the flow. . I love that reverse triangle. Yep. , and then , let's talk about a little bit about where the merge trains come in. tell you. And then I think the merge trains come in at five stage five. Yes, they do. That's . . And then the, what was that other thing? Yeah. I think, because we were talking about combining those two studies. Mm-hmm. I think that's how we can think about it is mapping out. Can we think about it mapping out the jobs to be done across this one job workflow? Merge trains execute. enter the note for the one job workflow. The one that you mentioned about the one that you had framed. Yeah. That can be, in my case, I had something for the core job. And for the new mapping, what you mentioned could be our core job. I think . Yeah, the top of the triangle one. And then I think is what our main research goal can be. Or where research question can be would be to figure out. Where did I write it? I wrote it. Yeah, how do we help developers to. How do we? Yeah, here it is. How do we help developers? Oh no, how do we help users? Because we don't want to say users to make their releases more efficient. that could be of this combined research study. We can say that's our primary goal. that could be the name of the research study. And then our approach could be. We could even have we could even have these stages here and then say walk us through your process with these stages. ideally they would show us in the tool, but they are sometimes not what they don't want to do that. we could just put this in a deck and then have them talk through first to say where are you involved in this flow, ? Yeah. And then say, , now unpack what are your goals here? What are you trying to do and what are your key tasks? that's. I think that sounds good. Yeah. It would be critical though. Yeah, because my current plan was to create the initial mapping by myself and then go to validation, but this is much better because we won't have to take a U-turn at any part of the process. Yeah, I think . And then we just get them to tell us. And it's ideally we wouldn't do that, but this is such a technical space that I think it's defensible. Hold it. We're not asking me. Yeah, I think it's . , . the method would be to interview to work through. The different stages involved in pipelines. To see where our users. Working and what their goals are. Do you think they'll recognize these parks or it doesn't matter. We can even just say, , we can even just say this is how we're defining this isn't in define, locate, prepare, confirm. Is that coming from us in any way or that's not coming from us that's coming from the , job, stability and templates. If you think changing this to and even combining a few stages would help, which I think would help. For example, I don't see very clear differentiation between prepare and confirm here. It's . Maybe that's an idea too is maybe what we do first is just say from your perspective, let's map out. What are the different stages. card sorting without providing cards. , yeah. what I end up doing, I'll show you one of these sessions, but what I end up doing is just making shapes with them and having them talk about it. , what we're doing now with the, , the secrets lifecycle is just to be , tell me about a secret. Where's the beginning. What's the middle. What's the end. And then they articulated there. But in that one, we're , who what where when. But I think in this one, we would just be , where does your process start. But I'm not the only thing I'm not sure about there is how we frame it. Yeah. keeping it open ended, but , nudging them to define those stages themselves. Yeah. And what's what do we say this? What is at the stages of. What is that? What do we, how do we say it? , how do you. Your perspective, what are the stages of a pipeline. Of pipeline execution of pipeline. , the stages of. How you were. Oh, should we keep it a little more generic and talk about what are the stages of verifying your code. Got it. Yeah. And what we can say to we can say not from your perspective or what , that's fine too, but we could just say tell us how your teams are breaking up the process of verifying your code into stages. I'm liking where this is going. Yeah. Yeah. This is the information that , they never asked for. Mm-hmm. I think we want to step back. Tell us how your team, especially if you have the bandwidth. Tell us how your teams are breaking up the process of verifying your code. Mm-hmm. And the good part is the same set of information can also be useful for Gina and Nadia. Yeah. , , yeah, because they're in this flow too, ? Yeah. Yeah. . At some point we'll need to put, where is, can we do it now really quickly? To help my brain? What stage is Gina doing? , pipe and insights and runner. But in this, I these stages. . All . I thought stage groups. That's what was going on in the mind. here we should call them, maybe we should call them steps we don't confuse ourselves. , I think execute. Execute is where both the stage groups are genius working with would very fit. And sorry, the pipeline insights can be more about monitor, . Stage six. Yes. And runner is of course execute because when the, , jobs are being executed, that's when the role of runner kicks in. . . it's a look up here. stage one, stage five is Gina when she's doing runners. Yes. . How does one day we'll talk about how runners and merge trains interact? It's all in that. It's hopefully in that blog post. , . Cool. , yeah. . , it seems , , maybe let's start recording when we recording still. Yes. We are recording still. No, let's talk. Let's talk calendars now. , we can stop. That's a brilliant. Yeah, yeah. That was good. Yeah, that was fun too. . that's stuff now? Yeah, yeah, yeah. . All . I'm stopping.",
  "word_count": 3719,
  "segment_count": 33,
  "cleaned_at": "2025-10-27T16:24:47.941314"
}