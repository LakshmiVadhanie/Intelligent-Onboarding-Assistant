{
  "content": "Success Plans\nA success plan is a roadmap that connects a customers desired business outcomes to GitLab solutions. It is a living document, developed by the CSM.\nView the\nCSM Handbook homepage\nfor additional CSM-related handbook pages.\nPurpose of a success plan\nA success plan is the outline and roadmap for achieving customer objectives using GitLab. It is used on an ongoing basis to align on outcomes, action items, and status between the customer and the GitLab team. It is the foundation of a CSMs engagement with their customers.\nThe success plan is mutually agreed upon by both sides, ensuring the details are reflective of the customers objectives and GitLabs plan to achieve those objectives and alignment across all involved on those details.\nIt is a living document, and is reviewed & updated regularly in\ncadence calls\n,\nbusiness reviews\n,\naccount team meetings\n, and all other situations involving customer journey planning & implementation.\nHow a success plan is used\nThe success plan is part of most interactions with the customer, and as an anchor point for GitLab team planning.\nCustomer objectives\nCustomer objectives are at the heart of a success plan. These are the core results that a customer needs to achieve, and define how we will work with the customer to achieve success. An objective has the following elements:\nA clearly stated goal & outcome\nMeasurable success criteria\nA timeline to achieve the objective, with steps & action items outlined in\ninitiatives\nOwner(s) and stakeholders\nThese core elements form the foundation for the rest of the success plan and the initiatives that fall under each objective. Using these details, we can determine the steps needed to achieve the objective and track our progress over time.\nInitiatives\nOnce an objective has been fully defined, one or more initiatives are created as action plans to achieve the objective. These focus on the how to meet the customer outcomes, and enable a division of responsibility for different aspects of the plan.\nVerifiable Outcomes\nVerifiable Outcomes (VOs) are a framework designed enhance the objectivity and visibility of customer achievements through adoption of GitLab. For a full video-based introduction to the concept, feel free to review the embedded youtube below (must be signed into GitLab Unfiltered account):\nWhy\nVerifiable Outcomes?\nMuch like buying a treadmill, the purchase of enterprise software only creates meaningful return on investment through careful planning, and dedicated effort over a sustained period of time. To avoid the trap of the metaphorical treadmill becoming a disused ornament where laundry is hung its crucial that Gitlabs account teams partner with customers to:\nCapture the customers desired outcomes\nMeasure and communicate the value of these outcomes in language relevant to the customer\nThe verifiable outcomes framework has been created to:\nDrive stakeholder alignment through clear customer-aligned objectives\nCapture growth opportunities by clearly illustrating return on investment\nEmpower strong negotiation positions through evidence-backed discussion of ROI\nImprove internal recognition of CS value delivery\nWhat is a Verifiable Outcome?\nA verifiable outcome must be\nSMART\n:\nS\npecific\nM\neasurable\nA\nttainable\nR\nelevant\nT\nime-bound\nTo be\nSMART\n, outcomes must include:\nBaseline metrics\n: Where we are today\nSuccess criteria\n: How well know when were done\nBusiness impact\n: The benefit to the customers business, in their language\nTimeline\n: When we expect to finish\nThe Process\nVerifiable outcomes progress through a four-stage process, represented by scoped labels applied to objective epics in the success plan:\nVerifiable Outcome::\nProposed\nGather baseline metrics\nCraft a plan with summary and child initiatives\nStrategize with peers, account team, and manager\nPresent to customer (preferably in a cadence call)\nAdjust based on customer feedback\nVerifiable Outcome::\nAccepted\nThe customer is aligned on baseline measures, success criteria, and timeline\nVerifiable Outcome::\nDelivered\nExecute on the planned initiatives\nTrack progress against established metrics\nVerifiable Outcome::\nVerified\nThe customer has validated that the desired objective was achieved\nDocument business impact, in the customers words\nBest Practices and Guidelines\nWhen developing verifiable outcomes:\nTalk to your stakeholders. Ask open-ended TED questions.\n\nT\nell me about the most important priorities for your team. How do they relate to broader company objectives?\n\nE\nxplain..., \nD\nescribe how..., etc.\nLeverage the resources and examples available to you, including:\nPublicly available annual/quarterly investor reports\nNews/Press releases/conference talks and other media\nCurate insights from GitLab case studies\nDraw upon examples from your peers\nStrategize with your account team\nTalk to your stakeholders\nExamples of Effective and Ineffective Verifiable Outcomes\nImagine you have a customer who wants to shorten their time-to-market, improve their developer productivity, or reduce customer-facing incidents. You agree with their platform engineering\nteam that through the use of GitLabs CI/CD pipeline capabilities, theres opportunity to drive standardization and optimization of common operations and broaden the use of common testing frameworks.\nTo bring objectivity and frame the problem in a business-relevant manner, here are four suggested sets of baseline metrics, success criteria and impact statements.\nBaseline Metrics\nSuccess Criteria\nTimeframe\nBusiness Impact\nDeployment frequency: 2 per week\nIncrease to 10 deployments per week\nBefore July 2025\nTime to market improved by 5x\nAverage deployment time: 4 hours\nReduce deployment time to 20 minutes\nThroughout Q2\n75% reduction in deployment time across X projects and Y deployments netting an estimated $$$ in time savings\nManual steps required: 15 steps\nReduce manual steps to 2\nDecember 2025\nReduced error rate by XX%\nDeployment success rate: 85%\nAchieve 99.5% deployment success rate\nSeptember 2025\nReduced customer-facing incidents XX by XX per year\nIts unlikely that all four will be relevant to your customer- considering reviewing one or two of your choosing, and align on which measure(s) they feel are most relevant to their situation.\nOn a weekly basis, any open objectives in customer success plans will be triaged by the\ncontinuous triage\nbot; provided your objective has draft success critieria, the bot will use GitLab Duo to suggest SMART success criteria with metrics & timelines for you.\n/Consider using AI/ as a means to brainstorm and ideate on your verifiable outcome, and evaluate if the criteria, metrics and impact are SMART in nature.\nSuccess plan lifecycle and process\nPre-sales\nThe success plan starts during the pre-sales phase, driven by the\nSolutions Architect\n. Throughout the product evaluation process the SA and the\nAccount Executive\ndefine customer objectives, and use these to demonstrate GitLab value aligned to these objectives. The SA documents these\nobjectives\nin the\nsuccess plan slide deck\nwith all of the requisite details. This information is part of what is used for a\nProof of Value\n, and ensures that we have a clear understanding of the customers needed business outcomes.\nTo understand the full process between Pre-sales and Post-sales, please read about the\nmutual customer success plan process\n.\nPost-sales transition\nOnce the AE and SA close a customer, the transition to post-sales takes place. The customer goes through\nonboarding\n, during which the CSM uses the success plan to outline a plan for adoption and aligns with the customer on the details of this plan. This includes a review of the already-listed objectives to ensure accuracy and initiatives for each of those objectives related to enablement, implementation, and other actions needed for the customer to achieve their objectives using GitLab.\nComing out of this phase, there should be full alignment between the GitLab team and the customer stakeholders on the\nobjectives\nand the plan to achieve them, including steps for each of the initiatives, ownership of those steps, and commitment from those owners based on defined timelines. Put simply, everyone should be clear on what comes next and who is responsible/accountable for it.\nEnablement and implementation\nWith the first iteration of the success plan agreed on with the customer, the CSM focuses on putting the plan into action. This has a few key facets:\nOverall management of progress against the plan, including regular reviews with stakeholders and\ninitiative\nowners\nPlanning and delivery of enablement sessions (workshops, demos, etc.) to the customer in line with the agreed-upon initiatives\nRecommendations to customer stakeholders on additional areas of opportunity for adoption and value realization based on existing objectives and knowledge of the customer\nThe most frequent customer engagement point for this is the\ncadence call\n. As the success plan is the hub of our work with the customer, details about initiatives and objectives are incorporated into the cadence call as part of our adoption efforts and overall customer management.\nBusiness reviews\nBusiness reviews\n, similar to\ncadence calls\n, occur on a regular basis and provide the opportunity to review the success plan at a high level and demonstrate progress against the success criteria, as well as discover new objectives for the future.\nThe success plan and business review should be thought of as mirror images of each other: the information maintained in the success plan feeds the discussion for the business review, and new information attained through the business review meeting is captured in the success plan to add to the roadmap for the customers success.\nSuccess Plan Components\nA success plan consists of two integrated components: the GitLab-based continuous planning project and the Gainsight success plan. These elements work together to ensure ongoing alignment across all stakeholders and enable measurement and analysis of our efforts.\nGitLab Continuous Planning Project\nThe success plan is maintained as a living document within a GitLab project, following our continuous planning methodology. This approach provides several key benefits:\nReal-time collaboration and updates through GitLabs native features\nAutomated generation of presentation materials through CI/CD pipelines\nDirect integration with daily workflow and project management\nStandardized documentation through epic and issue templates\nThe structure of the success plan in GitLab organizes objectives as epics and initiatives as issues, with standardized labels and templates ensuring consistent documentation. This makes it easy to track progress, demonstrate measurable results, and maintain up-to-date information thats accessible to all stakeholders.\nFor ease of discovery and visibility, the GitLab continuous planning project must be linked in the customers Gainsight success plan using the designated field on the plan info screen (to the right of Approval Status).\nGainsight Success Plan\nGainsights success plan capability enables us to analyze and understand patterns across a CSMs book of business and our organization more broadly, helping identify what drives successful use case adoption.\nWhile detailed information about objectives and initiatives lives in the GitLab project, we maintain key objective actions / updated in Gainsight timeline, like customer calls, meeting or similar.\nWhen an objective is identified and documented as an epic in GitLab, it is also synced to Gainsight. Once an objective is achieved, or if it is removed for any reason, it is closed in both GitLab and Gainsight accordingly.\nThis workflow minimizes duplication while enabling CSMs to maintain visibility into the progress and status of their initiatives across their book of business and track results over time.\nLinking GitLab and Gainsight\nGitLab.com serves as the source of truth for Success Plans, with automatic synchronization to Gainsight. This integration enables seamless visibility while reducing manual overhead.\nHow It Works\nSuccess Plans created in GitLab.com (epics and tasks) automatically sync to Gainsight\nData is transferred via API, creating corresponding Success Plans in Gainsight\nUpdates in GitLab.com reflect automatically in Gainsight\nBenefits\nSingle source of truth in GitLab.com\nReduced manual data entry and maintenance\nConsistent Success Plan visibility across platforms\nEliminates need to maintain plans in multiple locations\nContinuous Planning\nContinuous Planning is a tool designed to help GitLab account teams save time when building customer-facing success plans based on information maintained in customer collaboration groups. Anyone can use the tools to present updates on ongoing initiatives within their GitLab projects.\nQuestions & Techniques for Success Plan Discovery\nView the CSM Handbook homepage for additional CSM-related handbook pages.\nThe questions and...\nLast modified October 14, 2025:\nRemove trailing spaces (\n3643eb9e\n)\nView page source\n-\nEdit this page\n-\nplease\ncontribute\n.",
  "metadata": {
    "url": "https://handbook.gitlab.com/handbook/customer-success/csm/success-plans/",
    "title": "Success Plans | The GitLab Handbook",
    "scraped_at": "2025-10-26T20:49:49.844974",
    "content_length": 13094,
    "section": "handbook"
  },
  "processing": {
    "original_length": 13094,
    "cleaned_length": 13059,
    "cleaned_at": "2025-10-27T16:13:42.635321",
    "processor": "text_cleaner_v1",
    "word_count": 1983
  }
}